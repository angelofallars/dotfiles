#!/usr/bin/env bash

selected=$(\
           find \
               ~/projects \
               ~/forks \
               ~/study \
               -mindepth 1 -maxdepth 1 -type d |

           sed --regexp-extended "s/^\/home\/[^\/]+\///g" |

           fzf --border=rounded --reverse --prompt="  ➡️  " --ansi --cycle \
               --header="🚀 tmux-sessionizer" --header-first \
               --pointer="🔥" \
               --no-mouse \
               --no-info \
               --padding 1,0 --margin 0,2,1,2 \
               --color="prompt:blue,prompt:bold,border:green,border:dim" \
               --color="fg+:yellow" \
               --color="hl:underline,hl+:underline,hl:magenta,hl+:magenta" \
               --color="info:green" \
               --color="spinner:green,spinner:dim" \
               --preview='\
                  gitdir="$(echo "$HOME/")$(echo {})$(echo "/.git")"

                  print_repo_data() {
                      projectname=$(basename {})
                      commitcount=$(git --git-dir=$gitdir \
                                    rev-list --all --count)

                      printf "\e[0;93m\e[1;34m $projectname \e[0m\n"

                      printf "\e[0;93m\e[0;34m branch\e[0m   "

                      git --git-dir=$gitdir \
                      rev-parse --abbrev-ref HEAD

                      printf "\e[0;93m\e[0;34m commits\e[0m  "
                      echo $commitcount
                  }

                  list_files() {
                      export EXA_COLORS="di=33"
                      ~/.local/bin/exa -1 --icons -T -L 3 --git-ignore \
                      --group-directories-first -l --no-permissions \
                      --no-user --no-filesize --changed --no-time $HOME/{}
                  }

                  if [ -e $gitdir ]; then
                      sleep_interval="5"

                      repo_data=$(print_repo_data)
                      echo "$repo_data"

                      file_tree=$(list_files)
                      onefetch_output=$(
                          onefetch --output json ~/{} |
                          ~/.local/bin/onefetch-wrapper
                          )
                      language_emojis=$(echo $onefetch_output | sed 1q)

                      clear
                      echo "$repo_data"
                      printf "\e[0;93m\e[0;34m language \e[0m"
                      echo "$language_emojis\n"
                      echo "$file_tree"
                      sleep "$sleep_interval"

                      while true; do
                          clear
                          echo "$repo_data"
                          printf "\e[0;93m\e[0;34m language \e[0m"
                          echo "$onefetch_output"
                          sleep "$sleep_interval"

                          clear
                          echo "$repo_data"
                          printf "\e[0;93m\e[0;34m language \e[0m"
                          echo "$language_emojis\n"
                          echo "$file_tree\n"
                          sleep "$sleep_interval"
                      done
                  else
                      list_files
                  fi

                          ' \
               --preview-window=border-left,55%)

if [ $? != 0 ]
then
    exit
fi

selected="$HOME/${selected}"

selected_name=$(basename "$selected" | tr . _)

if ! tmux has-session -t $selected_name 2> /dev/null; then
    tmux new-session -ds $selected_name -c $selected \
        -x $(tput cols) -y $(tput lines) nvim $selected
    tmux new-window -t $selected_name:2 -d -c $selected zsh
fi

tmux switch-client -t $selected_name
